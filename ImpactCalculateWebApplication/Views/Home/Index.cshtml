@model IndexViewModel;
@{
    ViewData["Title"] = "Home Page";

    CocksModel cocksModel = new CocksModel();
}

@*<div class="main-head text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://docs.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>
</div>*@

<div class="col-md-2 d-none d-md-block bg-light sidebar">
    <h6 class="sidebar-heading d-flex justify-content-between align-items-center px-3 mt-4 mb-1 text-muted">
        <span>Постоянные величины</span>
    </h6>
    <div class="dropdown d-flex justify-content-between align-items-center px-3 mt-4 mb-1">
        <button class="btn btn-light btn-sm dropdown-toggle text-muted" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Выбор кокса
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            @{

                System.Reflection.PropertyInfo[] cocks = cocksModel.GetType().GetProperties();

                for (int i = 0; i < cocks.Length; i++)
                {
                        <a class="dropdown-item" href="#@(
                        ((Cocks)cocks[i].GetValue(cocksModel)).Q
                        )">@(((Cocks)cocks[i].GetValue(cocksModel)).Name)</a>
                }
            }
        </div>
    </div>
</div>

<div class="main-content">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">Исходные данные</h1>
    </div>
    <form form action="/Home/Index" method="post">
        <table class="table table-bordered table-responsive">
            <thead>
                <tr>
                    <th>Смены</th>
                    <th>Расход воздуха, м3/ч</th>
                    <th>Давление воздуха, мбар</th>
                    <th>Температура подогрева воздуха, *C</th>
                    <th>Температура отходящих газов, *C</th>
                    <th>Вязкость, усл. ед.</th>
                    <th>Температура расплава, *C</th>
                    <th>Содержание CO, %</th>
                    <th>Содержание CO2, %</th>
                    <th>Содержание N2, %</th>
                    <th>Содержание O2, %</th>
                </tr>
            </thead>

            @*@{
                System.Reflection.PropertyInfo[] fields = Model.Input.GetType().GetProperties();

                uint rowCounter = IndexViewModel.rowCounter;


                for (int x = 0; x < IndexViewModel.rowCounter; x++)
                {
                    <td rowspan="2">1</td>
                    <tr>
                        @{
                            for (int y = 0; y < fields.Length; y++)
                            {
                                <td>
                                    <input type="text" name="@fields[y].Name" value="@fields[y].GetValue(Model.Input)" class="form-control" id="@fields[y].Name">
                                </td>
                            }
                        }
                    </tr>
                }

                <p>@rowCounter</p>
            }*@

        </table>
        <button type="submit" value="Calculate" name="buttonType" class="btn btn-primary">Calculate</button>
        <button type="submit" value="AddNewRow" name="buttonType" class="btn btn-primary">+</button>

        @{
            if (IndexViewModel.rowCounter > 1)
            {
                <button type="submit" value="RemoveNewRow" name="buttonType" class="btn btn-primary">-</button>
            }
        }
    </form>
</div>